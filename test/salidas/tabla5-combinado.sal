1>#  creo una tabla de tamanio 15.
2>3>#  creo 15 personas, las inserto en la tabla, verifico que pertenezcan y las obtengo.
4>5>6>La persona con nombre Persona1 está en la tabla.
7>Persona 1: Persona1, 11 años
8>9>10>La persona con nombre Persona2 está en la tabla.
11>Persona 2: Persona2, 22 años
12>13>14>La persona con nombre Persona3 está en la tabla.
15>Persona 3: Persona3, 33 años
16>17>18>La persona con nombre Persona4 está en la tabla.
19>Persona 4: Persona4, 44 años
20>21>22>La persona con nombre Persona5 está en la tabla.
23>Persona 5: Persona5, 55 años
24>25>26>La persona con nombre Persona6 está en la tabla.
27>Persona 6: Persona6, 66 años
28>29>30>La persona con nombre Persona7 está en la tabla.
31>Persona 7: Persona7, 77 años
32>33>34>La persona con nombre Persona8 está en la tabla.
35>Persona 8: Persona8, 88 años
36>37>38>La persona con nombre Persona9 está en la tabla.
39>Persona 9: Persona9, 99 años
40>41>42>La persona con nombre Persona10 está en la tabla.
43>Persona 10: Persona10, 100 años
44>45>46>La persona con nombre Persona11 está en la tabla.
47>Persona 11: Persona11, 110 años
48>49>50>La persona con nombre Persona12 está en la tabla.
51>Persona 12: Persona12, 120 años
52>53>54>La persona con nombre Persona13 está en la tabla.
55>Persona 13: Persona13, 130 años
56>57>58>La persona con nombre Persona14 está en la tabla.
59>Persona 14: Persona14, 140 años
60>61>62>La persona con nombre Persona15 está en la tabla.
63>Persona 15: Persona15, 150 años
64>#  imprimo la tabla en el orden que quedaron insertados.
65>Persona 10: Persona10, 100 años
Persona 4: Persona4, 44 años
Persona 11: Persona11, 110 años
Persona 5: Persona5, 55 años
Persona 12: Persona12, 120 años
Persona 6: Persona6, 66 años
Persona 13: Persona13, 130 años
Persona 7: Persona7, 77 años
Persona 14: Persona14, 140 años
Persona 8: Persona8, 88 años
Persona 15: Persona15, 150 años
Persona 9: Persona9, 99 años
Persona 1: Persona1, 11 años
Persona 2: Persona2, 22 años
Persona 3: Persona3, 33 años
66>#  elimino las personas de id par y verifico que no pertenecen.
67>68>La persona con nombre Persona2 NO está en la tabla.
69>70>La persona con nombre Persona4 NO está en la tabla.
71>72>La persona con nombre Persona6 NO está en la tabla.
73>74>La persona con nombre Persona8 NO está en la tabla.
75>76>La persona con nombre Persona10 NO está en la tabla.
77>78>La persona con nombre Persona12 NO está en la tabla.
79>80>La persona con nombre Persona14 NO está en la tabla.
81>#  imprimo la tabla .
82>Persona 11: Persona11, 110 años
Persona 5: Persona5, 55 años
Persona 13: Persona13, 130 años
Persona 7: Persona7, 77 años
Persona 15: Persona15, 150 años
Persona 9: Persona9, 99 años
Persona 1: Persona1, 11 años
Persona 3: Persona3, 33 años
83>#  agrego dos colisiones a la tabla.
84>85>86>La persona con nombre Pers1ona NO está en la tabla.
87>La persona con nombre Pers1ona NO está en la lista.
88>89>90>La persona con nombre Pers7ona NO está en la tabla.
91>La persona con nombre Pers7ona NO e==902== Invalid read of size 8
==902==    at 0x10E881: eliminarPersonaConNombreTPersonasLDE(rep_personasLDE*&, char const*) (personasLDE.cpp:211)
==902==    by 0x10EDBF: eliminarPersonaDeTTablaPersonas(rep_tablaPersonas*&, char const*) (tablaPersonas.cpp:42)
==902==    by 0x10CD6F: main_eliminarPersonaDeTTablaPersonas(rep_tablaPersonas*&) (principal.cpp:1082)
==902==    by 0x10A1C9: main (principal.cpp:398)
==902==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==902== 
==902== 
==902== Process terminating with default action of signal 11 (SIGSEGV)
==902==  Access not within mapped region at address 0x0
==902==    at 0x10E881: eliminarPersonaConNombreTPersonasLDE(rep_personasLDE*&, char const*) (personasLDE.cpp:211)
==902==    by 0x10EDBF: eliminarPersonaDeTTablaPersonas(rep_tablaPersonas*&, char const*) (tablaPersonas.cpp:42)
==902==    by 0x10CD6F: main_eliminarPersonaDeTTablaPersonas(rep_tablaPersonas*&) (principal.cpp:1082)
==902==    by 0x10A1C9: main (principal.cpp:398)
==902==  If you believe this happened as a result of a stack
==902==  overflow in your program's main thread (unlikely but
==902==  possible), you can try to increase the size of the
==902==  main thread stack using the --main-stacksize= flag.
==902==  The main thread stack size used in this run was 8388608.
==902== 240 bytes in 2 blocks are definitely lost in loss record 4 of 9
==902==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==902==    by 0x10DDCB: crearTPersona(unsigned int, unsigned int, char const*, rep_agendaLS*) (persona.cpp:15)
==902==    by 0x10AEC3: main_crearPersona(rep_persona*&, rep_agendaLS*&) (principal.cpp:627)
==902==    by 0x1098C9: main (principal.cpp:248)
==902== 
Segmentation fault
